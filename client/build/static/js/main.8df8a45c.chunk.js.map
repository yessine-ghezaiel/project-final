{"version":3,"sources":["redux/actions/authTypes.js","helpers/constants.js","helpers/helpers.js","redux/actions/appStateActions.js","redux/actions/postActions.js","redux/actions/authActions.js","pages/LoginPage.js","pages/Register.js","components/AddPost.js","redux/actions/commentTypes.js","redux/actions/commentActions.js","components/Post.js","components/PostList.js","components/MyPosts.js","pages/Profile.js","privateRoutes/PrivateRoute.js","components/LoadingComponent.js","components/Navbar.js","pages/bg.jpg","pages/Home.js","redux/actions/carDealerTypes.js","redux/actions/carDealerActions.js","components/AddCardealer.js","components/CarDealer.js","components/CarDealerList.js","components/CardealerDetails.js","components/UpdateCardealer.js","components/AddComment.js","components/CommentPost.js","components/CommentList.js","components/PostDetail.js","App.js","reportWebVitals.js","redux/reducers/appStateReducer.js","redux/reducers/authReducer.js","redux/reducers/postReducer.js","redux/reducers/cardealerReducer.js","redux/reducers/commentReducer.js","redux/reducers/index.js","redux/store/store.js","index.js","redux/actions/postTypes.js","redux/actions/appStateTypes.js"],"names":["LOGIN_SUCCESS","REGISTER_SUCCESS","GET_PROFILE_SUCCESS","LOGOUT","prefixe","setToken","token","localStorage","getItem","axios","defaults","headers","common","require","START_LOADING","STOP_LOADING","SET_ERROR","CLEAR_ERROR","startLoading","ref","type","payload","stopLoading","setError","errors","clearError","getPost","page","limit","search","dispatch","a","get","data","GET_POST_SUCCESS","response","getMyPost","GET_MY_POST_SUCCESS","console","log","deletepost","_id","delete","res","DELETE_POST_SUCCESS","UpdatePost","newPost","put","UPDATE_POST_SUCCESS","getProfile","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","width","input","submit","LoginPage","useState","email","password","info","setInfo","classes","auth","useSelector","state","useDispatch","history","useHistory","useEffect","isAuth","push","className","Container","style","backgroundColor","color","component","maxWidth","CssBaseline","Avatar","fontSize","Typography","variant","onSubmit","e","preventDefault","post","login","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","onChange","target","value","Button","Copyright","align","to","Date","getFullYear","RegisterPage","selectedImage","setSelectedImage","firstname","lastname","image","handleInfoChange","marginLeft","STY","register","sm","autoFocus","height","src","alt","accept","files","length","myImage","Compressor","quality","success","result","reader","FileReader","readAsDataURL","onloadend","htmlFor","justifyContent","Box","mt","root","button","AddPost","title","description","setNewPost","ADD_POST_SUCCESS","addPost","multiple","TextareaAutosize","placeholder","boxShadow","GET_COMMENT_SUCCESS","GET_COMMENT_COUNT_SUCCESS","getComment","deletecomment","Post","posts","postList","count","edit","setEdit","setPage","setSelectedImage_name","handleSubmit","p","border","borderRadius","class","contentDirection","small","owner","imag","url","createdAt","replace","split","overflow","wordWrap","onClick","user","name_i","padding","flex","iconButton","divider","PostsList","setSearch","GET_POST_COUNT_SUCCESS","paddingTop","InputBase","IconButton","map","index","Pagination","Math","ceil","MyPosts","Profile","gridTemplateColumns","background","minHeight","marginRight","textAlign","reverse","PrivateRoute","Component","rest","render","props","flexGrow","minWidth","transform","modal","palette","shadows","LoadingComponent","rootRef","React","useRef","isLoading","appState","LinearProgress","drawerWidth","menu","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","Navbar","useTheme","open","setOpen","openInNewTab","newWindow","window","opener","AppBar","position","clsx","Toolbar","edge","filter","textDecoration","verticalAlign","Drawer","anchor","direction","Divider","ListItem","ListItemIcon","ListItemText","List","fontWeight","disableTypography","s","Home","GET_CARDEALER_SUCCESS","GET_CARDEALER_COUNT_SUCCESS","UPDATE_CARDEALER_SUCCESS","getCarDealer","marginBottom","AddCardealer","selectedImage_name","phoneNumber","adresse","src_maps","region","newCarDealer","setNewCarDealer","addCarDealer","CarDealer","cardealer","Card","Img","Body","Title","Text","Footer","role","CarDealerList","cardealerList","cardealers","flexWrap","paddingLeft","paddingRight","placeItems","CardealerDetails","match","find","params","deletecar","UpdateCardealer","Updatecardealer","AddComment","postID","newComment","setNewComment","flexDirecton","addComment","CommentPost","postid","comment","updateComment","CommentList","postId","commentList","comments","PostDetail","puch","App","exact","path","PostList","Register","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","appStateReducer","Boolean","JSON","parse","authReducer","setItem","stringify","clear","postReducer","cardealerReducer","CarDealers","commentReducer","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","ADD_POST_REQUEST","ADD_POST_FAIL","GET_POST_REQUEST","GET_POST_FAIL","GET_MY_POST_REQUEST","GET_MY_POST_FAIL","GET_POST_COUNT_REQUEST","GET_POST_COUNT_FAIL","UPDATE_POST_REQUEST","UPDATE_POST_FAIL","DELETE_POST_REQUEST"],"mappings":"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","file":"static/js/main.8df8a45c.chunk.js","sourcesContent":["export const LOGIN_REQUEST=\"LOGIN_REQUEST\"\r\nexport const LOGIN_SUCCESS=\"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL=\"LOGIN_FAIL\"\r\n\r\n\r\nexport const REGISTER_REQUEST=\"REGISTER_REQUEST\"\r\nexport const REGISTER_SUCCESS=\"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAIL=\"REGISTER_FAIL\"\r\n\r\nexport const GET_PROFILE_REQUEST=\"GET_PROFILE_REQUEST\"\r\nexport const GET_PROFILE_SUCCESS=\"GET_PROFILE_SUCCESS\"\r\nexport const GET_PROFILE_FAIL=\"GET_PROFILE_FAIL\"\r\n\r\nexport const LOGOUT =\"LOGOUT\"","export const prefixe ='http://localhost:5000'","\r\nimport axios from 'axios'\r\n\r\nexport const setToken = () => {\r\n    const token = localStorage.getItem('token')\r\n    if (token)\r\n        axios.defaults.headers.common[\"auth-token\"] = token\r\n    else\r\n        delete axios.defaults.headers.common[\"auth-token\"]\r\n}","const { START_LOADING, STOP_LOADING, SET_ERROR, CLEAR_ERROR } = require(\"./appStateTypes\")\r\n\r\nexport const startLoading = (ref) => {\r\n    return {\r\n        type: START_LOADING,\r\n        payload: ref\r\n    }\r\n}\r\n\r\nexport const stopLoading = () => {\r\n    return {\r\n        type: STOP_LOADING\r\n    }\r\n}\r\n\r\nexport const setError = (errors) => {\r\n    return {\r\n        type: SET_ERROR,\r\n        payload: errors\r\n    }\r\n}\r\nexport const clearError = () => {\r\n    return {\r\n        type: CLEAR_ERROR\r\n    }\r\n}\r\n\r\n","import axios from 'axios'\r\nimport { prefixe } from '../../helpers/constants'\r\nimport { setToken } from '../../helpers/helpers'\r\nimport {  ADD_POST_SUCCESS, DELETE_POST_SUCCESS,  GET_MY_POST_SUCCESS, GET_POST_COUNT_SUCCESS, GET_POST_FAIL, GET_POST_REQUEST, GET_POST_SUCCESS, UPDATE_POST_SUCCESS } from './postTypes'\r\nimport { clearError, setError, startLoading, stopLoading } from './appStateActions'\r\n\r\n\r\nexport const addPost = (newPost) =>async (dispatch)=>{\r\n    \r\n    try{\r\n        dispatch(startLoading(\"Adding post ...\"))\r\n        dispatch(clearError())\r\n        setToken()\r\n        const {data} = await axios.post(`${prefixe}/api/post/addpost`,newPost)\r\n        dispatch({\r\n            type:ADD_POST_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch(getPost(1,4))\r\n        // dispatch(getMyPost())\r\n    }catch(err){        \r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\n\r\nexport const getPost = (page, limit,search) => async (dispatch) => {\r\n    try {\r\n        dispatch(startLoading(\"Getting Posts...\"))\r\n        dispatch(clearError())\r\n        const { data } = await axios.get(`${prefixe}/api/post/posts?page=${page}&limit=${limit}&search=${search}`)\r\n        dispatch({\r\n            type: GET_POST_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\nexport const getPostCount = () => async (dispatch) => {\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Get post count\"))\r\n    try {\r\n        \r\n        const { data } = await axios.get(`${prefixe}/api/post/postcount`)\r\n        dispatch({\r\n            type: GET_POST_COUNT_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getMyPost = (search) => async (dispatch) => {\r\n    \r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Getting My Posts\"))\r\n    try {\r\n        setToken()\r\n        \r\n        const { data } = await axios.get(`${prefixe}/api/post/myposts?search=${search}`)\r\n        dispatch({\r\n            type: GET_MY_POST_SUCCESS,\r\n            payload: data\r\n        })\r\n        console.log(data)\r\n        dispatch(stopLoading())\r\n    }\r\n\r\n    catch (err) {\r\n    dispatch(stopLoading())\r\n    dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\n\r\nexport const deletepost = (_id) =>async (dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"deleting post..\"))\r\n\r\n    try {\r\n        setToken()\r\n        const res = await axios.delete(`${prefixe}/api/post/deletepost/${_id}`)\r\n        dispatch({\r\n            type: DELETE_POST_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data)\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const UpdatePost = (_id,newPost) =>async (dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Updating Post...\"))\r\n\r\n    try {\r\n        setToken()\r\n        const res = await axios.put(`${prefixe}/api/post/updatepost/${_id}`,newPost)\r\n        dispatch({\r\n            type: UPDATE_POST_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data)\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err)\r\n    }\r\n}","import { GET_PROFILE_SUCCESS,LOGIN_SUCCESS, LOGOUT, REGISTER_SUCCESS} from  './authTypes'\r\nimport axios from 'axios'\r\nimport { prefixe } from '../../helpers/constants'\r\nimport { setToken } from '../../helpers/helpers'\r\nimport { getMyPost } from './postActions'\r\nimport { clearError, setError, startLoading, stopLoading } from './appStateActions'\r\n\r\n\r\n\r\nexport const login =(info)=>async(dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Login\"))\r\n    try{\r\n        const res = await axios.post(`${prefixe}/api/user/login`,info)\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(stopLoading())\r\n        dispatch(getProfile())\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch(setError(err.response.data.errors))\r\n        dispatch(stopLoading())\r\n    }\r\n}\r\n\r\nexport const register = (info) => async (dispatch) => {\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Register\"))\r\n    try {\r\n        const {data} = await axios.post(`${prefixe}/api/user/register`, info)\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n        dispatch(getProfile())\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch(setError(err.response.data.errors))\r\n        dispatch(stopLoading())\r\n    }\r\n}\r\n\r\nexport const getProfile = ()=>async(dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Get my profile\"))\r\n    console.log('get profile dispatched')\r\n    try{\r\n        setToken()\r\n        const { data } = await axios.get(`${prefixe}/api/user/getprofile`)\r\n        dispatch ({\r\n            type:GET_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n    dispatch(getMyPost())\r\n        \r\n    }\r\n    catch(err){\r\n        console.log('get profile',err)\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\nexport const logout =() => {\r\n    return{\r\n        type:LOGOUT\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { login } from \"../redux/actions/authActions\";\r\nimport Compressor from \"compressorjs\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../redux/actions/authActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport \"./registre.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(35),\r\n\r\n    display: \"flex\",\r\n\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  form: {\r\n    width: \"60%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 0),\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n  const [info, setInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(info));\r\n  };\r\n  const history = useHistory()\r\n    useEffect(() => {\r\n        if (auth.isAuth)\r\n            history.push('/')\r\n    }, [auth.isAuth])\r\n\r\n  return (\r\n    <div className=\"log\">\r\n      <Container\r\n        style={{ backgroundColor: \"transparent\", color: \"white\" }}\r\n        component=\"main\"\r\n        maxWidth=\"xs\"\r\n      >\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar style={{ fontSize: \"large\" }} className={classes.avatar}>\r\n            <AccountCircle />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\" style={{ color: \"white\" }}>\r\n            Sign In\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  className=\"inputs\"\r\n                  onChange={(e) => setInfo({ ...info, email: e.target.value })}\r\n                  // onChange={handleInfoChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  className=\"inputs\"\r\n                  onChange={(e) =>\r\n                    setInfo({ ...info, password: e.target.value })\r\n                  }\r\n                  // onChange={handleInfoChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              fullWidth\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Button\r\n              type=\"reset\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n\r\n      {/* <form className=\"flex-column-center\" onSubmit={handleSubmit}>\r\n            <input type=\"email\" placeholder=\"account@domain.ext\" onChange={(e) => setInfo({ ...info, email: e.target.value })}></input>\r\n            <input type=\"password\" placeholder=\"*********\" onChange={(e) => setInfo({ ...info, password: e.target.value })}></input>\r\n            <button type=\"submit\" style={{ alignSelf: 'flex-end', color: \"black\" }}>Submit</button>\r\n            <button type=\"reset\" style={{ alignSelf: 'flex-end', color: \"black\" }}>Reset</button>\r\n        </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport Compressor from 'compressorjs'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../redux/actions/authActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport './registre.css'\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link style={{color:'inherit' }} to='/'>\r\n                Yessine Ghezaiel\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(25),\r\n        \r\n        display: 'flex',\r\n        \r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        \r\n        \r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegisterPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const auth = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const [selectedImage, setSelectedImage] = useState(\"\")\r\n    const [info, setInfo] = useState({\r\n        firstname: \"\",\r\n        lastname:\"\",\r\n        email: '',\r\n        password: '',\r\n        image:''\r\n    })\r\n\r\n\r\n\r\n    console.log(info)\r\n    const handleInfoChange = (e) => {\r\n        setInfo({ ...info, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(register(info))\r\n        \r\n\r\n    }\r\n\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files.length) {\r\n            const myImage = e.target.files[0]\r\n            new Compressor(myImage, {\r\n                quality: 0.8,\r\n                success(result) {\r\n                    const reader = new FileReader()\r\n                    reader.readAsDataURL(result)\r\n                    reader.onloadend = () => {\r\n                        setSelectedImage(reader.result)\r\n                        setInfo({...info, image: reader.result })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    {\r\n        if (auth.isAuth == true ) {\r\n            history.push('/')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className='bg'>\r\n\r\n        \r\n        <Container style={{marginLeft:'10%', backgroundColor:'white' }} component=\"main\" maxWidth='xs'>\r\n            <CssBaseline />\r\n            <div className={classes.paper} >\r\n                <Avatar style= {{ fontSize:'large' }} className={classes.avatar}>\r\n                    <AccountCircle   />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} STY onSubmit={handleSubmit} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6} >\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstname\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                style={{backgroundColor:\"white\"}}\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"lastname\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                autoFocus\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleInfoChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                            {selectedImage && <img name=\"preview\" style={{ height: \"120px\", width: \"80px\" }} src={selectedImage || \"./images/default.jpg\"} alt=\"preview\"></img>}\r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className={classes.input}\r\n                                id=\"contained-button-file\"\r\n                                type=\"file\"\r\n                                onChange={handleImageChange}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                    Upload\r\n                                </Button>\r\n                            </label>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type='submit'\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link variant=\"body2\"  to='/login'>\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                            {/* <Link to='/login' variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link> */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n        </div>\r\n    );\r\n}","import  React,{useState} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {addPost} from '../redux/actions/postActions'\r\nimport Compressor from 'compressorjs'\r\nimport { Button, makeStyles, TextareaAutosize, TextField } from \"@material-ui/core\"\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\n//lets try without it later\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst AddPost = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const [selectedImage, setSelectedImage] = useState(\"\")\r\n    const [newPost, setNewPost] = useState({\r\n        title:'',\r\n        description:'',\r\n        image:''\r\n    })\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files.length) {\r\n            const myImage = e.target.files[0]\r\n            new Compressor(myImage, {\r\n                quality: 0.8,\r\n                success(result) {\r\n                    const reader = new FileReader()\r\n                    reader.readAsDataURL(result)\r\n                    reader.onloadend = () => {\r\n                        setSelectedImage(reader.result)\r\n                        setNewPost({ ...newPost,image: reader.result })\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(addPost(newPost))\r\n        setNewPost({\r\n            title:'',\r\n            description:''\r\n        })\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <form  style={{ marginLeft:'-10%',width: \"110%\" }} onSubmit={handleSubmit}>\r\n                {/* a essayer sans selectedImage loula */}\r\n                {selectedImage && <img name=\"preview\" style={{ height: \"100px\" }} src={selectedImage || \"\"} alt=\"preview\"></img>}\r\n                <br />\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleImageChange}\r\n                    \r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n\r\n                <TextareaAutosize aria-label=\"Post title\"\r\n                    placeholder=\"Post title\" value={newPost.title}\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n                />\r\n\r\n                <TextareaAutosize aria-label=\"Post description\"\r\n                    placeholder=\"Post Description\" value={newPost.description}\r\n                    style={{ height: \"100px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewPost({ ...newPost, description: e.target.value })}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                >\r\n                    Post\r\n                </Button>            \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPost\r\n","export const ADD_COMMENT_REQUEST=\"ADD_COMMENT_REQUEST\"\r\nexport const ADD_COMMENT_SUCCESS=\"ADD_COMMENT_SUCCESS\"\r\nexport const ADD_COMMENT_FAIL=\"ADD_COMMENT_FAIL\"\r\n\r\n\r\nexport const GET_COMMENT_REQUEST=\"GET_COMMENT_REQUEST\"\r\nexport const GET_COMMENT_SUCCESS=\"GET_COMMENT_SUCCESS\"\r\nexport const GET_COMMENT_FAIL=\"GET_COMMENT_FAIL\"\r\n\r\n\r\n\r\nexport const GET_COMMENT_COUNT_REQUEST = \"GET_COMMENT_COUNT_REQUEST\"\r\nexport const GET_COMMENT_COUNT_SUCCESS = \"GET_COMMENT_COUNT_SUCCESS\"\r\nexport const GET_COMMENT_COUNT_FAIL = \"GET_COMMENT_COUNT_FAIL\"\r\n\r\nexport const UPDATE_COMMENT_REQUEST = \"UPDATE_COMMENT_REQUEST\"\r\nexport const UPDATE_COMMENT_SUCCESS = \"UPDATE_COMMENT_SUCCESS\"\r\nexport const UPDATE_COMMENT_FAIL = \"UPDATE_COMMENT_FAIL\"\r\n\r\n\r\nexport const DELETE_COMMENT_REQUEST = \"DELETE_COMMENT_REQUEST\"\r\nexport const DELETE_COMMENT_SUCCESS = \"DELETE_COMMENT_SUCCESS\"","import axios from 'axios'\r\nimport { prefixe } from '../../helpers/constants'\r\nimport { setToken } from '../../helpers/helpers'\r\nimport { clearError, setError, startLoading, stopLoading } from './appStateActions'\r\nimport { ADD_COMMENT_SUCCESS, DELETE_COMMENT_SUCCESS, GET_COMMENT_COUNT_SUCCESS, GET_COMMENT_SUCCESS, UPDATE_COMMENT_SUCCESS } from './commentTypes'\r\n\r\n\r\nexport const addComment = (id,newComment) =>async (dispatch)=>{\r\n    \r\n    try{\r\n        dispatch(startLoading(\"Adding comment ...\"))\r\n        dispatch(clearError())\r\n        setToken()\r\n        const {data} = await axios.post(`${prefixe}/api/comment/addcomment/${id}`,newComment)\r\n        dispatch({\r\n            type:ADD_COMMENT_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch(getComment(id))\r\n        // dispatch(getMyPost())\r\n    }catch(err){        \r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\n\r\nexport const getComment = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch(startLoading(\"Getting Posts...\"))\r\n        dispatch(clearError())\r\n        const { data } = await axios.get(`${prefixe}/api/comment/comments/${id}`)\r\n        dispatch({\r\n            type: GET_COMMENT_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\nexport const getCommentCount = () => async (dispatch) => {\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Get Comment count\"))\r\n    try {\r\n        const { data } = await axios.get(`${prefixe}/api/comment/commentcount`)\r\n        dispatch({\r\n            type: GET_COMMENT_COUNT_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const deletecomment = (id) =>async (dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"deleting comment..\"))\r\n\r\n    try {\r\n        setToken()\r\n        const res = await axios.delete(`${prefixe}/api/comment/deletecomment/${id}`)\r\n        dispatch({\r\n            type: DELETE_COMMENT_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data)\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateComment = (id,newComment) =>async (dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Updating Commennt...\"))\r\n\r\n    try {\r\n        setToken()\r\n        const res = await axios.put(`${prefixe}/api/comment/updatecomment/${id}`,newComment)\r\n        console.log(res)\r\n        dispatch({\r\n            type: UPDATE_COMMENT_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data)\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err)\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './postDetails.css'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletepost, getPost, UpdatePost } from \"../redux/actions/postActions\";\r\nimport AddPost from \"./AddPost\";\r\nimport Compressor from 'compressorjs'\r\nimport { Button, makeStyles, TextareaAutosize, TextField } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router\";\r\nimport {getComment} from \"../redux/actions/commentActions\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nexport default function Post({ post }) {\r\n  const classes = useStyles();\r\n  const [selectedImage, setSelectedImage] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  const postList = useSelector(state => state.posts.postList)\r\n  const auth = useSelector(state => state.auth)\r\n  const count = useSelector(state => state.posts.count)\r\n  const dispatch = useDispatch()\r\n  const [edit, setEdit] = useState(true)\r\n  const [page, setPage] = useState(1)\r\n  const [limit, setLimit] = useState(5)\r\n  const [selectedImage_name, setSelectedImage_name] = useState(\"\")\r\n  const deletecar = (e,p) => {\r\n \r\n        \r\n    dispatch(deletepost(post._id))\r\n    setPage(p)\r\n    dispatch(getPost(p, limit))\r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\n  const [newPost, setNewPost] = useState({\r\n      title:'',\r\n      description:'',\r\n  })\r\n  const startedit =()=>{\r\n    setEdit(false)\r\n    setNewPost({\r\n      title:post.title,\r\n      description:post.description\r\n  })}\r\n  console.log(newPost)\r\n  const handleImageChange = (e) => {\r\n      if (e.target.files.length) {\r\n          const myImage = e.target.files[0]\r\n          const name_i=e.target.files[0].name\r\n            console.log(name_i)\r\n            setSelectedImage_name(e.target.files[0].name)\r\n          new Compressor(myImage, {\r\n              quality: 0.8,\r\n              success(result) {\r\n                  const reader = new FileReader()\r\n                  reader.readAsDataURL(result)\r\n                  reader.onloadend = () => {\r\n                      setSelectedImage(reader.result)\r\n                      setNewPost({ ...newPost,image: reader.result })\r\n                  }\r\n\r\n              }\r\n          })\r\n      }\r\n  }\r\n  const handleSubmit =(e,p)=>{\r\n      e.preventDefault()\r\n      dispatch(UpdatePost(post._id,newPost))\r\n      dispatch(getPost(p, limit))\r\n\r\n      setNewPost({\r\n          title:'',\r\n          description:'',\r\n          image:''\r\n      })\r\n      setEdit(true)\r\n  }\r\n\r\n  return (\r\n    // <Card className={classes.root}>\r\n    //     <CardActionArea>\r\n    //         <CardContent>\r\n    //             {console.log(post)}\r\n    //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n    //                 <Avatar alt=\"Remy Sharp\" src={post.owner.image ? post.owner.image.url : \"./images/default.jpg\"} />\r\n    //                 <span>{`${post.owner.firstname} ${post.owner.lastname} `}</span>\r\n    //             </Typography>\r\n    //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n    //                 {post.title}\r\n    //             </Typography>\r\n\r\n    //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n    //                 {post.description}\r\n    //             </Typography>\r\n    //         </CardContent>\r\n    //         {post.image && <CardMedia\r\n    //             component=\"img\"\r\n    //             alt=\"post image\"\r\n    //             style={{ height: 250, width: 400 }}\r\n    //             image={post.image.url}\r\n    //             title={'my title'}\r\n    //         />}\r\n    //     </CardActionArea>\r\n    //     <CardActions>\r\n    //         <Button size=\"small\" color=\"primary\">\r\n    //             Share\r\n    //         </Button>\r\n    //         <Button size=\"small\" color=\"primary\">\r\n    //             Learn More\r\n    //         </Button>\r\n    //     </CardActions>\r\n    // </Card>\r\n\r\n    <div >\r\n      <div className='container mt-1' style={{ width: \"40%\", border:'',borderRadius: '12px' }}>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\" >\r\n            {\r\n              edit ?\r\n            \r\n            <article class=\"blog-card \" >\r\n              \r\n              <div class=\"blog-card__info\" style={{ borderRadius: '10px' }}>\r\n                <h4>{post.title}</h4>\r\n                <p style={{ display: \"flex\", contentDirection: \"row\" }}>\r\n                  \r\n                  \r\n                  <Avatar  className={classes.small}  src={post.owner.imag || post.owner.image.url || '/images/default.jpg'} />\r\n                  <div style={{marginLeft:'2%'}}>\r\n                    <p> {post.owner.firstname} {post.owner.lastname} <br />\r\n                        Posted at :{post.createdAt.replace('T',' ').split(':')[0]+':'+post.createdAt.replace('T',' ').split(':')[1]}\r\n                    </p>\r\n\r\n                  </div>\r\n                </p>\r\n                <div style={{ marginLeft:'2%',fontSize:20,overflow:'auto' ,wordWrap: 'break-word'}}>\r\n                {post.description}\r\n                </div>\r\n                \r\n                    <Button class=\"btn btn--with-icon\" onClick={()=>{dispatch(getComment(post._id)) ;history.push(`/posts/${post._id}`)}}  style={{marginTop:'2%',fontSize: 12}}>\r\n                        READ MORE\r\n                    </Button>\r\n                    {auth.isAuth &&(\r\n                    auth.user._id == post.owner._id ? \r\n                    <><Button onClick={()=>deletecar()} style={{marginTop:'2%',backgroundColor:'#DC143C',color:'white'}}><DeleteForeverIcon /></Button> <Button onClick={()=>startedit()}  style={{marginTop:'2%',backgroundColor:'lime',color:'white'}}>Edit</Button></>\r\n                    : null\r\n                    )}\r\n              </div>\r\n            </article>\r\n                    : <div className={classes.root}>\r\n                    <form  style={{ marginLeft:'-10%',width: \"110%\" }} onSubmit={handleSubmit}>\r\n                        {/* a essayer sans selectedImage loula */}\r\n                        {/* {selectedImage && <img name=\"preview\" style={{ height: \"100px\" }} src={selectedImage || \"./images/default.jpg\"} alt=\"preview\"></img>} */}\r\n                        {post.image ?\r\n                            \r\n                            <img name=\"preview\" style={{ height: \"100px\" }} src={selectedImage =='' ? \r\n                            post.image.url || post.image || '':selectedImage} ></img>\r\n                            : null\r\n                        }<br />\r\n                        {/* <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            multiple\r\n                            onChange={handleImageChange}\r\n                            \r\n                        /> */}\r\n                        <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\"\r\n                                    type=\"file\"\r\n                                    onChange={handleImageChange}\r\n                                    multiple\r\n                                    \r\n                                    \r\n                                />\r\n                        \r\n                        {/* <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </label> */}\r\n        \r\n                        <TextareaAutosize aria-label=\"Post title\"\r\n                            placeholder=\"Post title\" value={newPost.title}\r\n                            style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                            onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n                        />\r\n        \r\n                        <TextareaAutosize aria-label=\"Post description\"\r\n                            placeholder=\"Post Description\" value={newPost.description}\r\n                            style={{ height: \"100px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                            onChange={(e) => setNewPost({ ...newPost, description: e.target.value })}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                          Update Post\r\n                        </Button>            \r\n                    </form>\r\n                </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Post from './Post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AddPost from './AddPost'\r\nimport { getPost, getPostCount } from '../redux/actions/postActions'\r\nimport { Pagination } from '@material-ui/lab'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport { Button ,Card, IconButton, InputBase } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n      backgroundColor:'white',\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nconst PostsList = () => {\r\n    const classes = useStyles();\r\n\r\n    const postList = useSelector(state => state.posts.postList)\r\n    const auth = useSelector(state => state.auth)\r\n    const count = useSelector(state => state.posts.count)\r\n    const dispatch = useDispatch()\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(7)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(getPostCount())\r\n        dispatch(getPost(page, limit,search))\r\n    }, [])\r\n\r\n    const handlePageChange = (e, p) => {\r\n        setPage(p)\r\n        dispatch(getPost(p, limit,search))\r\n    }\r\n    return (\r\n        <div style={{backgroundColor:'lightgrey',marginTop:'-10%',paddingTop:'15%'}}>\r\n            {auth.isAuth && \r\n            <div style={{ display:'flex',flexDirection: 'column',alignItems: 'center',justifyContent: 'center'}}>\r\n                <div style={{ display:'flex',flexDirection: 'row',alignItems: 'center',justifyContent: 'center'}}>\r\n\r\n                    <InputBase style={{marginLeft:''}} value={search} className={classes.input} onChange={(e)=>setSearch(e.target.value)} placeholder=\"Search Post\"/>\r\n                    <IconButton  onClick={(e)=>{dispatch(getPost(page,limit,search));setSearch('')}} className={classes.iconButton} >\r\n                    <SearchIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <AddPost />\r\n            </div>}\r\n            {postList.length && postList.map((post, index) => <Post key={index} post={post}></Post>)}\r\n            <div style={{ display:'flex',flexDirection: 'column',alignItems: 'center',justifyContent: 'center'}}>\r\n                <Pagination count={Math.ceil(count / limit)} onChange={handlePageChange} />\r\n            </div>\r\n            {/* <LimitSelector setLimit={setLimit} /> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsList;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './postDetails.css'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletepost, getMyPost, getPost, UpdatePost } from \"../redux/actions/postActions\";\r\nimport AddPost from \"./AddPost\";\r\nimport Compressor from 'compressorjs'\r\nimport { Button, makeStyles, TextareaAutosize, TextField } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router\";\r\nimport {getComment} from \"../redux/actions/commentActions\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nexport default function MyPosts ({ search,post }) {\r\n    const classes = useStyles();\r\n    const [selectedImage, setSelectedImage] = useState(\"\")\r\n    const history = useHistory()\r\n  \r\n    const postList = useSelector(state => state.posts.postList)\r\n    const auth = useSelector(state => state.auth)\r\n    const count = useSelector(state => state.posts.count)\r\n    const dispatch = useDispatch()\r\n    const [edit, setEdit] = useState(true)\r\n    const [page, setPage] = useState(1)\r\n    const [limit, setLimit] = useState(5)\r\n    const [selectedImage_name, setSelectedImage_name] = useState(\"\")\r\n    const deletecar = () => {\r\n   \r\n          \r\n      dispatch(deletepost(post._id))\r\n      dispatch(getMyPost({search}))\r\n      \r\n    }\r\n    \r\n  \r\n  \r\n  \r\n    const [newPost, setNewPost] = useState({\r\n        title:'',\r\n        description:'',\r\n    })\r\n    const startedit =()=>{\r\n      setEdit(false)\r\n      setNewPost({\r\n        title:post.title,\r\n        description:post.description\r\n    })}\r\n    console.log(newPost)\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files.length) {\r\n            const myImage = e.target.files[0]\r\n            const name_i=e.target.files[0].name\r\n              console.log(name_i)\r\n              setSelectedImage_name(e.target.files[0].name)\r\n            new Compressor(myImage, {\r\n                quality: 0.8,\r\n                success(result) {\r\n                    const reader = new FileReader()\r\n                    reader.readAsDataURL(result)\r\n                    reader.onloadend = () => {\r\n                        setSelectedImage(reader.result)\r\n                        setNewPost({ ...newPost,image: reader.result })\r\n                    }\r\n  \r\n                }\r\n            })\r\n        }\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(UpdatePost(post._id,newPost))\r\n        dispatch(getMyPost({search}))\r\n  \r\n        setNewPost({\r\n            title:'',\r\n            description:'',\r\n            image:''\r\n        })\r\n        setEdit(true)\r\n    }\r\n  \r\n    return (\r\n\r\n      <div >\r\n        <div className='container mt-1' style={{ width: \"40%\", border:'',borderRadius: '12px' }}>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\" >\r\n              {\r\n                edit ?\r\n              \r\n              <article class=\"blog-card \" >\r\n                \r\n                <div class=\"blog-card__info\" style={{ borderRadius: '10px' }}>\r\n                  <h4>{post.title}</h4>\r\n                  <p style={{ display: \"flex\", contentDirection: \"row\" }}>\r\n                    \r\n                    \r\n                    <Avatar  className={classes.small}  src={post.owner.imag || post.owner.image.url || '/images/default.jpg'} />\r\n                    <div style={{marginLeft:'2%'}}>\r\n                      <p> {post.owner.firstname} {post.owner.lastname} <br />\r\n                          Posted at :{post.createdAt.replace('T',' ').split(':')[0]+':'+post.createdAt.replace('T',' ').split(':')[1]}\r\n                      </p>\r\n  \r\n                    </div>\r\n                  </p>\r\n                  <div style={{ marginLeft:'2%',fontSize:20,overflow:'auto' ,wordWrap: 'break-word'}}>\r\n                  {post.description}\r\n                  </div>\r\n                  \r\n                      <Button class=\"btn btn--with-icon\" onClick={()=>{dispatch(getComment(post._id)) ;history.push(`/posts/${post._id}`)}}  style={{marginTop:'2%',fontSize: 12}}>\r\n                          READ MORE\r\n                      </Button>\r\n                      {auth.isAuth &&(\r\n                      auth.user._id == post.owner._id ? \r\n                      <><Button onClick={()=>deletecar()} style={{marginTop:'2%',backgroundColor:'#DC143C',color:'white'}}><DeleteForeverIcon /></Button> <Button onClick={()=>startedit()}  style={{marginTop:'2%',backgroundColor:'lime',color:'white'}}>Edit</Button></>\r\n                      : null\r\n                      )}\r\n                </div>\r\n              </article>\r\n                      : <div className={classes.root}>\r\n                      <form  style={{ marginLeft:'-10%',width: \"110%\" }} onSubmit={handleSubmit}>\r\n                          {post.image ?\r\n                              \r\n                              <img name=\"preview\" style={{ height: \"100px\" }} src={selectedImage =='' ? \r\n                              post.image.url || post.image || '':selectedImage} ></img>\r\n                              : null\r\n                          }<br />\r\n                          \r\n                          <input\r\n                                      accept=\"image/*\"\r\n                                      className={classes.input}\r\n                                      id=\"contained-button-file\"\r\n                                      type=\"file\"\r\n                                      onChange={handleImageChange}\r\n                                      multiple\r\n                                      \r\n                                      \r\n                                  />\r\n                          \r\n                          \r\n          \r\n                          <TextareaAutosize aria-label=\"Post title\"\r\n                              placeholder=\"Post title\" value={newPost.title}\r\n                              style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                              onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n                          />\r\n          \r\n                          <TextareaAutosize aria-label=\"Post description\"\r\n                              placeholder=\"Post Description\" value={newPost.description}\r\n                              style={{ height: \"100px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                              onChange={(e) => setNewPost({ ...newPost, description: e.target.value })}\r\n                          />\r\n                          <Button\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              className={classes.button}\r\n                              onClick={handleSubmit}\r\n                          >\r\n                            Update Post\r\n                          </Button>            \r\n                      </form>\r\n                  </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        \r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getProfile, logout } from '../redux/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport AddPost from '../components/AddPost'\r\nimport  { getMyPost } from '../redux/actions/postActions'\r\nimport Post from '../components/Post'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport PostsList from '../components/PostList'\r\nimport { Button ,Card, IconButton, InputBase } from '@material-ui/core'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport MyPosts from '../components/MyPosts'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    backgroundColor:'white',\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\nconst Profile =  () => {\r\n    \r\n    const auth = useSelector(state => state.auth)\r\n    const postList = useSelector(state => state.posts.postList)\r\n    const [search, setSearch] = useState('')\r\n    // const count = useSelector(state => state.posts.count)\r\n    const dispatch = useDispatch()\r\n    console.log(search)\r\n    useEffect(() => {\r\n        \r\n        dispatch(getMyPost(search))\r\n    }, [])\r\n    // console.log(postList)\r\n    // console.log(auth)\r\n    const classes = useStyles();\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          width: \"100%\",\r\n          gridTemplateColumns: \"30% 70%\",\r\n          background:'lightgrey'\r\n          ,minHeight:'750px'\r\n        }}\r\n      >\r\n        <div style={{marginLeft:'auto',marginRight:'auto' ,marginTop:'20%'}}>\r\n\r\n          <img  style={{marginLeft:'25%', height:'150px',borderRadius:'50%',width:'150px'}} src={auth.user.image.url || auth.user.image}></img>\r\n          <h1  style={{textAlign:'center'}}> {auth.user.firstname} {auth.user.lastname}   </h1>\r\n          <h4 style={{textAlign:'center'}}> {auth.user.email}</h4>\r\n        </div>\r\n\r\n        <div >\r\n            <div style={{width:'50%',marginLeft:'auto',marginRight:'auto',marginTop:'8%'}}>\r\n                \r\n                <InputBase style={{marginLeft:'20%'}} value={search} className={classes.input} onChange={(e)=>setSearch(e.target.value)} placeholder=\"Search Post\"/>\r\n                <IconButton  onClick={(e)=>{dispatch(getMyPost(search));setSearch('')}} className={classes.iconButton} >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n                \r\n                <AddPost></AddPost>\r\n            </div>\r\n            \r\n          {postList.length &&\r\n            postList\r\n              .map((post, index) => <MyPosts key={index} search={search} post={post}></MyPosts>)\r\n              .reverse()}\r\n        <div>\r\n\r\n        </div>\r\n        </div>\r\n        {/* <button onClick={()=>dispatch(logout())}>logout</button> */}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const auth = useSelector((state) => state.auth);\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                !auth.isAuth ? <Redirect to=\"/login\" /> : <Component {...props} />\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useSelector } from 'react-redux';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 150,\r\n        flexGrow: 1,\r\n        minWidth: 300,\r\n        transform: 'translateZ(0)',\r\n        // The position fixed scoping doesn't work in IE 11.\r\n        // Disable this demo to preserve the others.\r\n        '@media all and (-ms-high-contrast: none)': {\r\n            display: 'none',\r\n        },\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        padding: theme.spacing(1),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function LoadingComponent() {\r\n    const classes = useStyles();\r\n    const rootRef = React.useRef(null);\r\n    const isLoading = useSelector(state => state.appState.isLoading)\r\n    return (\r\n        <>\r\n            {isLoading.state && <div className={classes.root} ref={rootRef}>\r\n                <div>\r\n                    <p id=\"server-modal-title\">{`${isLoading.ref} is loading ...`}</p>\r\n                    <LinearProgress color=\"secondary\" />\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Link } from 'react-router-dom'\r\nimport { Avatar } from '@material-ui/core';\r\nimport { logout } from '../redux/actions/authActions';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DirectionsCarIcon from '@material-ui/icons/DirectionsCar';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 0,\r\n  },\r\n  title: {\r\n       flexGrow: 1,\r\n       textAlign:'right',\r\n     },\r\n  menu:{\r\n    flexGrow: 1,\r\n    textAlign:'left',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n\r\n  \r\n  \r\n  \r\n  const auth = useSelector(state => state.auth)\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [ouvre,setOuvre] =  React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleMenu = (event) => {\r\n    setOuvre(true);\r\n  };\r\nconst handleClose = () => {\r\n   setOuvre(false);\r\n };\r\n const openInNewTab = (url) => {\r\n  const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n  if (newWindow) newWindow.opener = null\r\n}\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar style={{ background: 'black' }} position='fixed' className={clsx(classes.appBar, {[classes.appBarShift]: open,})}>\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)} >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.menu} >\r\n           <div > <Link style={{color: 'honeydew\t' ,filter: 'brightness(1.5)', textDecoration:'none'}} to='/'>Home</Link> <Link style={{color: 'white' , textDecoration:'none'}} to='/posts'>Our Forum</Link></div>\r\n           </Typography>\r\n           {!auth.isAuth ?  \r\n           <Typography variant=\"h6\"  className={classes.title}>\r\n             <div > <Link style={{color: 'honeydew' ,filter: 'brightness(1.5)', textDecoration:'none'}} to='/login'>Login</Link> <Link style={{color: 'white' , textDecoration:'none'}} to='/register'>Register</Link></div>\r\n           </Typography>\r\n           :\r\n           <Typography variant=\"h6\"  style={{display:'inline-block'}} className={classes.title}>\r\n             <div style={{}}> <Link style={{color: 'honeydew' ,filter: 'brightness(1.5)', textDecoration:'none'}} to='/profile'>Profile</Link> <Link style={{color: 'white' , textDecoration:'none'}} onClick={() => dispatch(logout())}>Logout</Link> {!auth.user ? null : <Avatar  alt=\"Remy Sharp\"  style={{display:'inline-block',verticalAlign: 'middle' }} src={auth.user.image.url || auth.user.image}  className={classes.small} />}</div>\r\n             \r\n            {/* <div className={classes.root}>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"                              \r\n                >\r\n                {!auth.user ? <AccountCircle   /> : <Avatar alt=\"Remy Sharp\"   src={auth.user.image.url || auth.user.image}  className={classes.small} />}\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                style={{top:'0px'}}\r\n                anchorOrigin={{\r\n                  \r\n                  horizontal: 'right',\r\n                  top:0 }}\r\n                keepMounted\r\n                open={ouvre}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose} ><Link to='/profile'>Profile</Link></MenuItem>\r\n                <MenuItem onClick={() => dispatch(logout())}>logout</MenuItem>\r\n              </Menu>\r\n              \r\n            </div> */}\r\n           </Typography>}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <ListItem>\r\n          {auth.isAuth &&(\r\n           \r\n            \r\n          \r\n              !auth.user ? null : \r\n              <ListItem button>\r\n                <ListItemIcon><Avatar alt=\"Remy Sharp\" src={auth.user.image.url || auth.user.image} className={classes.small} /></ListItemIcon>\r\n                <ListItemText > <Link to='/profile'>{auth.user.firstname} {auth.user.lastname}</Link></ListItemText>\r\n            </ListItem>\r\n              // <div style={{display:'inline-block'}}>\r\n                \r\n                \r\n\r\n              //   <Avatar alt=\"Remy Sharp\" src={auth.user.image.url || auth.user.image} className={classes.small} />\r\n                \r\n              //   <Link to='/profile'>{auth.user.firstname} {auth.user.lastname}</Link>\r\n                \r\n              // </div>\r\n          )}\r\n          \r\n          </ListItem>\r\n          <Divider />\r\n        <List>\r\n          \r\n            <ListItem >\r\n              <ListItemIcon><HomeIcon/></ListItemIcon>\r\n              <ListItemText ><Link style={{textDecoration:'none'}} to='/'>Home</Link> </ListItemText>\r\n            </ListItem>\r\n            <ListItem >\r\n              <ListItemIcon><DirectionsCarIcon/></ListItemIcon>\r\n              <ListItemText><Link style={{textDecoration:'none'}} to='/cardealerlist'>Cardealer List</Link></ListItemText>\r\n            </ListItem>\r\n            <ListItem >\r\n              <ListItemIcon><ForumIcon/></ListItemIcon>\r\n              <ListItemText><Link style={{textDecoration:'none'}} to='/posts'>Our Forum</Link></ListItemText>\r\n            </ListItem>\r\n        </List>\r\n\r\n        <Divider />\r\n        \r\n          \r\n        <div style={{textAlign:'center',fontSize:'16px',fontWeight:'bolder'}}>\r\n          Contact Us Via\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemIcon><MailIcon /></ListItemIcon>\r\n            <ListItemText disableTypography style={{marginLeft:-20 ,fontSize:'15px'}} s onClick={() => openInNewTab('https://mail.google.com/mail/u/0/#inbox?compose=CllgCJNsMBjQPksCprrjPSRxDMRdrfVKxvsjBShtTPKWCmpRmJQnQWVkfbpltBktVWNMCdkNHCL')} > yessineghezaiel@gmail.com</ListItemText>\r\n          </ListItem>\r\n          \r\n          <ListItem button>\r\n            <ListItemIcon><FacebookIcon /> </ListItemIcon>\r\n            <ListItemText  onClick={() => openInNewTab('https://www.facebook.com/profile.php?id=100000048181375')} >Yessine Ghezaiel </ListItemText>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon><LinkedInIcon /></ListItemIcon>\r\n            <ListItemText onClick={() => openInNewTab('https://www.linkedin.com/in/ghezaiel-yessine-3a983819b')} > Yessine Ghezaiel</ListItemText>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon><CallIcon /></ListItemIcon>\r\n            <ListItemText > +216 25 142 674</ListItemText>\r\n          </ListItem>\r\n          \r\n        </List>\r\n      </Drawer>\r\n    \r\n        \r\n      \r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bg.1229c28e.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AddPost from '../components/AddPost'\r\nimport PostList from '../components/PostList'\r\nimport { getPost, getPostCount } from '../redux/actions/postActions'\r\nimport { Pagination } from '@material-ui/lab'\r\nimport LimitSelector from '../components/LimitSelector'\r\nimport back from './bg.jpg'\r\nimport './home.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: \"#46AD8D\",\r\n//       contrastText: \"#fff\" //button text white instead of black\r\n//     },\r\n//     background: {\r\n//       default: \"#394764\"\r\n//     }\r\n//   }\r\n// });\r\n\r\nfunction Home() {\r\n    return (\r\n\r\n    <div className='back'>\r\n\r\n      <div id=\"container\">\r\n      \r\n\r\n              <button class=\"click\"> <Link style={{color:'white', textDecoration:'none'}} to='/cardealerlist'>Cardealer List</Link></button>\r\n              <button class=\"click\"><Link style={{color:'white', textDecoration:'none'}}  to='/posts'>Our Forum</Link></button> \r\n        \r\n      </div>\r\n    </div>\r\n\r\n    );\r\n  }\r\n  export default Home","export const ADD_CARDEALER_REQUEST=\"ADD_POST_REQUEST\"\r\nexport const ADD_CARDEALER_SUCCESS=\"ADD_CARDEALER_SUCCESS\"\r\n\r\n\r\nexport const GET_CARDEALER_REQUEST=\"GET_CARDEALER_REQUEST\"\r\nexport const GET_CARDEALER_SUCCESS=\"GET_CARDEALER_SUCCESS\"\r\n\r\nexport const GET_CARDEALER_COUNT_REQUEST = \"GET_CARDEALER_COUNT_REQUEST\"\r\nexport const GET_CARDEALER_COUNT_SUCCESS = \"GET_CARDEALER_COUNT_SUCCESS\"\r\n\r\nexport const UPDATE_CARDEALER_REQUEST=\"UPDATE_CARDEALER_REQUEST\"\r\nexport const UPDATE_CARDEALER_SUCCESS=\"UPDATE_CARDEALER_SUCCESS\"","import axios from 'axios'\r\nimport { prefixe } from '../../helpers/constants'\r\nimport { setToken } from '../../helpers/helpers'\r\nimport { clearError, setError, startLoading, stopLoading } from './appStateActions'\r\nimport { ADD_CARDEALER_SUCCESS, GET_CARDEALER_COUNT_SUCCESS, GET_CARDEALER_SUCCESS, UPDATE_CARDEALER_SUCCESS } from './carDealerTypes'\r\n\r\n\r\nexport const addCarDealer = (newCarDealer) =>async (dispatch)=>{\r\n\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Adding NEW CARDEALER ...\"))\r\n    setToken()\r\n\r\n    try {\r\n        const res = await axios.post(`${prefixe}/api/car/addcardealer`,newCarDealer)\r\n        dispatch({\r\n            type: ADD_CARDEALER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        \r\n        dispatch(stopLoading())\r\n        \r\n    } catch (err) {\r\n        dispatch(setError(err.response.data.errors))\r\n        dispatch(stopLoading())\r\n    }\r\n}\r\n\r\n\r\n\r\n//     try{\r\n//         const { data } = await axios.post(`${prefixe}/api/car/addcardealer`,newCarDealer)\r\n//         dispatch({\r\n//             type:ADD_CARDEALER_SUCCESS,\r\n//             payload:data\r\n//         })\r\n//         dispatch(getCarDealer(1,4))\r\n//     }catch(err){        \r\n//         dispatch(stopLoading())\r\n//         dispatch(setError(err.response.data.errors))\r\n//     }\r\n// }\r\n\r\n\r\nexport const getCarDealer = (page, limit) => async (dispatch) => {\r\n    try {\r\n        dispatch(startLoading(\"Getting Cardealers...\"))\r\n        dispatch(clearError())\r\n        const { data } = await axios.get(`${prefixe}/api/car/cardealers?page=${page}&limit=${limit}`)\r\n        console.log('data',data);\r\n        dispatch({\r\n            type: GET_CARDEALER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err);\r\n    }\r\n}\r\nexport const getCarDealerCount = () => async (dispatch) => {\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Get cardealers count\"))\r\n    try {\r\n        const { data } = await axios.get(`${prefixe}/api/car/cardealercount`)\r\n        dispatch({\r\n            type: GET_CARDEALER_COUNT_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n    }\r\n}\r\n\r\nexport const Updatecardealer = (_id,newCarDealer) =>async (dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Updating cardealer..\"))\r\n\r\n    try {\r\n        setToken()\r\n        const res = await axios.put(`${prefixe}/api/car/updatecardealer/${_id}`,newCarDealer)\r\n        dispatch({\r\n            type: UPDATE_CARDEALER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data)\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const deletecardealer = (_id) =>async (dispatch)=>{\r\n    dispatch(clearError())\r\n    dispatch(startLoading(\"Deleting cardealer..\"))\r\n\r\n    try {\r\n        setToken()\r\n        const res = await axios.delete(`${prefixe}/api/car/deletecardealer/${_id}`)\r\n        dispatch({\r\n            type: UPDATE_CARDEALER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        console.log(res.data)\r\n        dispatch(stopLoading())\r\n    }\r\n    catch (err) {\r\n        dispatch(stopLoading())\r\n        dispatch(setError(err.response.data.errors))\r\n        console.log(err)\r\n    }\r\n}","import  React,{useState} from 'react'\r\nimport Compressor from 'compressorjs'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { addCarDealer } from '../redux/actions/carDealerActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../redux/actions/authActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport './add.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(20),\r\n        marginBottom:theme.spacing(5),\r\n        \r\n        display: 'flex',\r\n        \r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        \r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst AddCardealer = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const [selectedImage, setSelectedImage] = useState(\"\")\r\n    const [selectedImage_name, setSelectedImage_name] = useState(\"\")\r\n    const [newCarDealer, setNewCarDealer] = useState({\r\n\r\n        title:'',\r\n        description:'',\r\n        email:'',\r\n        phoneNumber:'',\r\n        adresse:'',\r\n        src_maps:'',\r\n        region:'',\r\n        image:'',\r\n    })\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files.length) {\r\n            const myImage = e.target.files[0]\r\n            const name_i=e.target.files[0].name\r\n            console.log(name_i)\r\n            setSelectedImage_name(e.target.files[0].name)\r\n            new Compressor(myImage, {\r\n                quality: 0.8,\r\n                success(result) {\r\n                    const reader = new FileReader()\r\n\r\n                    reader.readAsDataURL(result)\r\n                    console.log(reader.result)\r\n                    reader.onloadend = () => {\r\n                        setSelectedImage(reader.result)\r\n                        setNewCarDealer({ ...newCarDealer, image: reader.result })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    console.log(newCarDealer);\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(addCarDealer(newCarDealer));\r\n        \r\n        setNewCarDealer({\r\n\r\n            title:'',\r\n            description:'',\r\n            email:'',\r\n            phoneNumber:'',\r\n            adresse:'',\r\n            src_maps:'',\r\n            region:'',\r\n            image:'',\r\n        })\r\n        setSelectedImage_name('')\r\n    }\r\n    return (\r\n        <div className='bg' style={{overflow:'auto'}}>\r\n\r\n\r\n\r\n\r\n            <Container style={{ backgroundColor:'white' }} component=\"main\" maxWidth='xs'>\r\n                <CssBaseline />\r\n                <div className={classes.paper} >\r\n                    <Avatar style= {{ fontSize:'large' }} className={classes.avatar}>\r\n                        <DriveEtaIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Add New Cardealer\r\n                    </Typography>\r\n                    <form className={classes.form} STY onSubmit={handleSubmit} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} >\r\n                                <TextField\r\n                                    autoComplete=\"title\"\r\n                                    name=\"title\"\r\n                                    variant=\"outlined\"\r\n                                    value={newCarDealer.title}\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    autoFocus\r\n                                    style={{backgroundColor:\"white\"}}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, title: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"description\"\r\n                                    name=\"description\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"description\"\r\n                                    label=\"Description\"\r\n                                    autoFocus\r\n                                    value={newCarDealer.description}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, description: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    type='email'\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    value={newCarDealer.email}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, email: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"src_maps\"\r\n                                    label=\"Src Google Maps\"\r\n                                    value={newCarDealer.src_maps}\r\n                                    id=\"src_maps\"\r\n                                \r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, src_maps: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                \r\n\r\n                                <TextField\r\n                                    \r\n                                    variant=\"outlined\"\r\n                                    \r\n                                    fullWidth\r\n                                    name=\"phoneNumber\"\r\n                                    label=\"Phone Number\"\r\n                                    value={newCarDealer.phoneNumber}\r\n                                    id=\"phoneNumber\"\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, phoneNumber: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"adresse\"\r\n                                    label=\"address\"\r\n                                    \r\n                                    id=\"adresse\"\r\n                                    value={newCarDealer.adresse}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, adresse: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"region\"\r\n                                    label=\"Region\"\r\n                                    \r\n                                    id=\"region\"\r\n                                    value={newCarDealer.region}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, region: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                                {/* {selectedImage && <img name=\"preview\" style={{ height: \"120px\", width: \"80px\" }} src={selectedImage || \"./images/default.jpg\"} alt=\"preview\"></img>} */}\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\"\r\n                                    type=\"file\"\r\n                                    \r\n                                    onChange={handleImageChange}\r\n                                    \r\n                                />\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                <p>{selectedImage_name}</p>\r\n                                    <Button variant=\"contained\" color=\"primary\" component=\"span\"  >\r\n                                        Upload\r\n                                    </Button>\r\n                                </label>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Add Cardealer\r\n                        </Button>\r\n                       \r\n                    </form>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* <form className=\"flex-column-center\" style={{ width: \"50vw\" }} onSubmit={handleSubmit}>\r\n                {/* a essayer sans selectedImage loula */}\r\n                {/* {selectedImage && <img name=\"preview\" style={{ height: \"200px\" }} src={selectedImage || \"./images/default.jpg\"} alt=\"preview\"></img>}\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleImageChange}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n\r\n                <TextareaAutosize aria-label=\"Post title\"\r\n                    placeholder=\"Cardealer title\"\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, title: e.target.value })}\r\n                />\r\n\r\n                <TextareaAutosize aria-label=\"Post description\"\r\n                    placeholder=\"Cardealer Description\"\r\n                    style={{ height: \"100px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, description: e.target.value })}\r\n                />\r\n\r\n                <TextareaAutosize aria-label='email'\r\n                    placeholder=\"email\"\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, email: e.target.value })}\r\n                />\r\n\r\n                <TextareaAutosize aria-label=\"Phone Number\"\r\n                    placeholder=\"Phone Number\"\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, phoneNumber: e.target.value })}\r\n                />\r\n\r\n                <TextareaAutosize aria-label=\"Post title\"\r\n                    placeholder=\"Src Google Maps\"\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, src_maps: e.target.value })}\r\n                />\r\n\r\n                <TextareaAutosize aria-label=\"Post title\"\r\n                    placeholder=\"Cardealer Adress\"\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, adresse: e.target.value })}\r\n                />\r\n                \r\n                <TextareaAutosize aria-label=\"Post title\"\r\n                    placeholder=\"Region\"\r\n                    style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                    onChange={(e) => setNewCarDealer({ ...newCarDealer, region: e.target.value })}\r\n                />\r\n                <Button\r\n                    type='submit'\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    // endIcon={<Icon>send</Icon>}\r\n                >\r\n                    Add Cardealer\r\n                </Button>            \r\n            </form> */} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCardealer\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\n// import Button from '@material-ui/core/Button';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import { ListItem, Divider, List, ListItemIcon, ListItemText } from '@material-ui/core';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './cardealerlist.css'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deletecardealer } from '../redux/actions/carDealerActions';\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 600,\r\n    },\r\n});\r\nexport default function CarDealer({ cardealer }) {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const auth = useSelector(state => state.auth)\r\n    return (\r\n\r\n        <Card style={{ width: '18rem',marginRight:'2%', marginBottom:'2%' }} className=' d-flex'>\r\n        <Card.Img variant=\"top\" src={cardealer.image.url || cardealer.image } />\r\n        <Card.Body className='flex-column'>\r\n          <Card.Title>{cardealer.title}</Card.Title>\r\n          <Card.Text>\r\n          {cardealer.adresse}\r\n          </Card.Text>\r\n        </Card.Body>\r\n\r\n          <Card.Footer>\r\n          <Button onClick={()=>history.push(`/cardealer/${cardealer._id}`)} variant=\"primary\">More Details</Button>\r\n          {auth.isAuth &&(\r\n            \r\n              auth.user.role =='admin' ? \r\n              <> <Button onClick={()=>history.push(`/updatecardealer/${cardealer._id}`)}>Edit</Button>   </> \r\n              :\r\n              null\r\n          )}\r\n          \r\n          \r\n          \r\n          {/* { auth.user.role='admin' ? \r\n          <div><Button  variant=\"primary\">Go somewhere</Button> <Button>yummy</Button></div> :<Button  variant=\"primary\">Go somewhere</Button>} */}\r\n          </Card.Footer>\r\n      </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // <Card >\r\n            //     <CardActionArea>\r\n            //         <CardContent>\r\n            //             {console.log(cardealer)}\r\n                        \r\n            //             <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            //                 {cardealer.title}\r\n            //             </Typography>\r\n            //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            //                 {cardealer.phoneNumber}\r\n            //             </Typography>\r\n            //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            //                 {cardealer.email}\r\n            //             </Typography>\r\n            //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            //                 {cardealer.localisation}\r\n            //             </Typography>\r\n\r\n            //             <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            //                 {cardealer.description}\r\n            //             </Typography>\r\n            //             <img src={cardealer.image}></img>\r\n                        \r\n            //         </CardContent>\r\n            //         {cardealer.image && <CardMedia\r\n            //             component=\"img\"\r\n            //             alt=\"cardealer image\"\r\n            //             style={{ height: 250, width: 400 }}\r\n            //             image={cardealer.image.url}\r\n            //             title={'my title'}\r\n            //         />}\r\n            //     </CardActionArea>\r\n            //     <CardActions>\r\n            //         <Button size=\"small\" color=\"primary\">\r\n            //             Share\r\n            //         </Button>\r\n            //         <Button size=\"small\" color=\"primary\">\r\n            //             Learn More\r\n            //         </Button>\r\n            //     </CardActions>\r\n            // </Card>\r\n            \r\n    \r\n    \r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletecardealer, getCarDealer } from \"../redux/actions/carDealerActions\";\r\nimport { getCarDealerCount } from \"../redux/actions/carDealerActions\";\r\nimport CarDealer from \"./CarDealer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ListItem,\r\n  Divider,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport \"./cardealerlist.css\";\r\nimport LimitSelector from \"./LimitSelector\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nconst CarDealerList = ({ postList }) => {\r\n  const history = useHistory()\r\n  \r\n\r\n  const auth = useSelector(state => state.auth)\r\n  const cardealerList = useSelector((state) => state.cardealers.cardealerList);\r\n  console.log(cardealerList);\r\n  const count = useSelector((state) => state.cardealers.count);\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(6);\r\n  useEffect(() => {\r\n    dispatch(getCarDealerCount());\r\n    dispatch(getCarDealer(page, limit));\r\n  }, []);\r\n  const handlePageChange = (e, p) => {\r\n    setPage(p)\r\n    dispatch(getCarDealer(p, limit))\r\n}\r\n  \r\n  // const handlePageChange = (e, p) => {\r\n  //     setPage(p)\r\n  //     dispatch(getCarDealer(p, limit))\r\n  // }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\"}}>\r\n      <div style={{textAlign:'center',width: '100%', fontSize:25,marginTop:'5%'}}>\r\n          Cardealer List\r\n          <div>\r\n\r\n      {auth.isAuth &&(\r\n            \r\n            auth.user.role =='admin' ? <> <Button style={{backgroundColor:'lightgreen', color:'black' }} onClick={()=>history.push(`/addcardealer`)}>Add New Cardealer</Button>   </> \r\n            :\r\n            null\r\n        )}\r\n          </div>\r\n      </div>\r\n      {/* <div style={{  width: \"20%\", marginTop: '2%' }}>\r\n        \r\n        <List >\r\n          <ListItem button style={{ backgroundColor: \"black\" }}>\r\n            <ListItemIcon> </ListItemIcon>\r\n            <ListItemText style={{ color: \"white\" }}>\r\n                Filter by region\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Checkbox />\r\n            </ListItemIcon>\r\n            <ListItemText> Tunis </ListItemText>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Checkbox />\r\n            </ListItemIcon>\r\n            <ListItemText> Nabeul </ListItemText>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Checkbox />\r\n            </ListItemIcon>\r\n            <ListItemText> Sfax </ListItemText>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Checkbox />\r\n            </ListItemIcon>\r\n            <ListItemText> Sousse </ListItemText>\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Checkbox />\r\n            </ListItemIcon>\r\n            <ListItemText> Bizerte </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n        \r\n      </div>\r\n       */}\r\n      <div style={{ marginLeft: \"20%\", marginTop: '5%' }}>\r\n          <div style={{display:'flex',flexWrap: 'wrap',flexDirection:'row', paddingLeft:'5%' }}>\r\n\r\n        {cardealerList.length && cardealerList.map((cardealer, index) => (<CarDealer  style={{paddingRight:'5%'}} key={index} cardealer={cardealer}></CarDealer>)).reverse()}\r\n          </div>\r\n        <Pagination style={{display: 'grid',placeItems: 'center'}} count={Math.ceil(count / limit)} onChange={handlePageChange} />\r\n        {/* <LimitSelector setLimit={setLimit} /> */}\r\n      </div>\r\n    </div>\r\n\r\n    // <div style={{ width:'100%',marginTop:'0px'}}>\r\n\r\n    //     <div style={{width:'20%'}>\r\n\r\n    //         <div style={{  marginTop:'10px', position:'fixed' ,height:'100%'}} >\r\n\r\n    // <List >\r\n    //     <ListItem button  style={{backgroundColor:'black'}}>\r\n    //         <ListItemIcon> </ListItemIcon>\r\n    //         <ListItemText style={{color:'white'}} > Filter by region </ListItemText>\r\n    //     </ListItem>\r\n    // </List>\r\n    // <Divider />\r\n    // <List >\r\n    //     <ListItem button >\r\n    //         <ListItemIcon><Checkbox /> </ListItemIcon>\r\n    //         <ListItemText > Tunis </ListItemText>\r\n    //     </ListItem>\r\n    //     <ListItem button >\r\n    //         <ListItemIcon><Checkbox /> </ListItemIcon>\r\n    //         <ListItemText > Nabeul </ListItemText>\r\n    //     </ListItem>\r\n    //     <ListItem button >\r\n    //         <ListItemIcon><Checkbox /> </ListItemIcon>\r\n    //         <ListItemText > Sfax </ListItemText>\r\n    //     </ListItem>\r\n    //     <ListItem button >\r\n    //         <ListItemIcon><Checkbox /> </ListItemIcon>\r\n    //         <ListItemText > Sousse </ListItemText>\r\n    //     </ListItem>\r\n    //     <ListItem button >\r\n    //         <ListItemIcon><Checkbox  /> </ListItemIcon>\r\n    //         <ListItemText > Bizerte </ListItemText>\r\n    //     </ListItem>\r\n    // </List>\r\n    //         </div>\r\n    //     </div>\r\n\r\n    //     <div style={{ marginLeft:'20%',marginTop:'50px'}}>\r\n\r\n    //         <div style={{}}>\r\n    //             hello\r\n    //         </div>\r\n    //         <div >\r\n    //             {cardealerList.length && cardealerList.map((cardealer, index) => <CarDealer key={index} cardealer={cardealer}></CarDealer>).reverse()}\r\n    //         </div>\r\n    //     </div>\r\n\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default CarDealerList;\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button ,Card,ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './cardealerdetails.css'\r\nimport { deletecardealer } from '../redux/actions/carDealerActions';\r\nconst CardealerDetails = ({match}) => {\r\n    const cardealerList = useSelector((state) => state.cardealers.cardealerList);\r\n    const cardealer= cardealerList.find((a)=>a._id == match.params._id) \r\n    const history = useHistory()\r\n    const auth = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const deletecar = (e) => {\r\n        \r\n        \r\n        dispatch(deletecardealer(cardealer._id))\r\n        \r\n        history.push(`/cardealerlist`)\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"App arriere\">\r\n            <div >\r\n                <Card  style={{ width: '35rem',marginTop:'80px' }}>\r\n                <Card.Body>\r\n                        <Link  to='/cardealerlist'> <Button variant=\"danger\">Return to Cardealer list</Button> </Link>\r\n                    </Card.Body>\r\n                    <Card.Img style={{width:'150px', height:'100px', marginLeft:' auto',marginRight: 'auto', marginTop:'50px'}} src={cardealer.image.url || cardealer.image} />\r\n                    <Card.Body>\r\n                        <Card.Title style={{fontSize:'30px'}}>{cardealer.title}</Card.Title>\r\n                        <Card.Text>{cardealer.description}</Card.Text>\r\n                        <Card.Text>Email:<Card.Text></Card.Text>\r\n                             {cardealer.email}</Card.Text>\r\n                        <Card.Text>Phone Number: <Card.Text></Card.Text> {cardealer.phoneNumber}</Card.Text>\r\n                        <Card.Text>Adresse: <Card.Text></Card.Text> {cardealer.adresse}</Card.Text>\r\n                        <iframe src={cardealer.src_maps} style={{border:0,width:'30rem', height:'300px' }} ></iframe>\r\n                    </Card.Body>\r\n                        {/* <ListGroup className=\"list-group-flush\">\r\n                        <ListGroupItem>Adresse city: {cardealer.address.city}</ListGroupItem>\r\n                        <ListGroupItem>Adresse Street: {cardealer.address.street}</ListGroupItem>\r\n                        <ListGroupItem>Adresse Suite: {cardealer.address.suite}</ListGroupItem>\r\n                    </ListGroup> */}\r\n                    {auth.isAuth &&(\r\n            \r\n            auth.user.role == 'admin' ? \r\n            <>  <Button onClick={()=>deletecar()} variant=\"danger\">Delete</Button>  </> \r\n            :\r\n            null\r\n        )}\r\n                    \r\n                </Card>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default CardealerDetails\r\n\r\n\r\n\r\n\r\n","import  React,{useState} from 'react'\r\nimport Compressor from 'compressorjs'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport {Updatecardealer } from '../redux/actions/carDealerActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../redux/actions/authActions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport './add.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(20),\r\n        marginBottom:theme.spacing(5),\r\n        \r\n        display: 'flex',\r\n        \r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        \r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst UpdateCardealer = ({match}) => {\r\n    const auth = useSelector(state => state.auth)\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n    const [selectedImage, setSelectedImage] = useState(\"\")\r\n    const [selectedImage_name, setSelectedImage_name] = useState(\"\")\r\n    const cardealerList = useSelector((state) => state.cardealers.cardealerList);\r\n    const cardealer= cardealerList.find((a)=>a._id == match.params._id) \r\n\r\n    const [newCarDealer, setNewCarDealer] = useState({\r\n\r\n        title:cardealer.title,\r\n        description:cardealer.description,\r\n        email:cardealer.email,\r\n        phoneNumber:cardealer.phoneNumber,\r\n        adresse:cardealer.adresse,\r\n        src_maps:cardealer.src_maps,\r\n        region:cardealer.region,\r\n        image:cardealer.image,\r\n    })\r\n    \r\n    const handleImageChange = (e) => {\r\n        if (e.target.files.length) {\r\n            \r\n            const myImage = e.target.files[0]\r\n            const name_i=e.target.files[0].name\r\n            console.log(name_i)\r\n            setSelectedImage_name(e.target.files[0].name)\r\n            new Compressor(myImage, {\r\n                quality: 0.8,\r\n                success(result) {\r\n                    const reader = new FileReader()\r\n                   \r\n                    reader.readAsDataURL(result)\r\n                    \r\n                    reader.onloadend = () => {\r\n                        setSelectedImage(reader.result)\r\n                        console.log(reader.result)\r\n                        setNewCarDealer({ ...newCarDealer, image: reader.result })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    console.log(newCarDealer);\r\n    const handle =(e )=>{\r\n        e.preventDefault()\r\n        dispatch(Updatecardealer(cardealer._id,newCarDealer));\r\n        history.push(`/cardealerlist`)\r\n        \r\n    }\r\n    return (\r\n        <div className='bg' style={{overflow:'auto'}}>\r\n\r\n\r\n\r\n\r\n            <Container style={{ backgroundColor:'white' }} component=\"main\" maxWidth='xs'>\r\n                <CssBaseline />\r\n                <div className={classes.paper} >\r\n                    <Avatar style= {{ fontSize:'large' }} className={classes.avatar}>\r\n                        <DriveEtaIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Update Cardealer\r\n                    </Typography>\r\n                    <form className={classes.form} STY  noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} >\r\n                                <TextField\r\n                                    autoComplete=\"title\"\r\n                                    name=\"title\"\r\n                                    variant=\"outlined\"\r\n                                    value={newCarDealer.title}\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Title\"\r\n                                    autoFocus\r\n                                    style={{backgroundColor:\"white\"}}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, title: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    autoComplete=\"description\"\r\n                                    name=\"description\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"description\"\r\n                                    label=\"Description\"\r\n                                    autoFocus\r\n                                    value={newCarDealer.description}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, description: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    type='email'\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    value={newCarDealer.email}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, email: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"src_maps\"\r\n                                    label=\"Src Google Maps\"\r\n                                    value={newCarDealer.src_maps}\r\n                                    id=\"src_maps\"\r\n                                \r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, src_maps: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                \r\n\r\n                                <TextField\r\n                                    \r\n                                    variant=\"outlined\"\r\n                                    \r\n                                    fullWidth\r\n                                    name=\"phoneNumber\"\r\n                                    label=\"Phone Number\"\r\n                                    value={newCarDealer.phoneNumber}\r\n                                    id=\"phoneNumber\"\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, phoneNumber: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"adresse\"\r\n                                    label=\"address\"\r\n                                    \r\n                                    id=\"adresse\"\r\n                                    value={newCarDealer.adresse}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, adresse: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"region\"\r\n                                    label=\"Region\"\r\n                                    \r\n                                    id=\"region\"\r\n                                    value={newCarDealer.region}\r\n                                    onChange={(e) => setNewCarDealer({ ...newCarDealer, region: e.target.value })}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                            {selectedImage ==\"\" ?\r\n                            \r\n                            <img name=\"preview\" style={{ height: \"120px\", width: \"80px\" }} src={newCarDealer.image.url || newCarDealer.image} ></img>\r\n                            :null}\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\"\r\n                                    type=\"file\"\r\n                                    \r\n                                    onChange={handleImageChange}\r\n                                    \r\n                                />\r\n                                <label htmlFor=\"contained-button-file\">\r\n                                <p>{selectedImage_name} </p>\r\n                                    <Button variant=\"contained\" color=\"primary\" component=\"span\"  >\r\n                                        Upload\r\n                                    </Button>\r\n                                </label>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            \r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handle}\r\n                        >\r\n                            Update Cardealer\r\n                        </Button>\r\n                       \r\n                    </form>\r\n                </div>\r\n            </Container>\r\n\r\n\r\n</div>\r\n\r\n)}\r\n\r\nexport default UpdateCardealer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../redux/actions/postActions\";\r\nimport {\r\nButton,makeStyles,TextareaAutosize,TextField} from \"@material-ui/core\";\r\nimport { addComment, getComment } from \"../redux/actions/commentActions\";\r\n\r\n//lets try without it later\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      \r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    height:'auto',\r\n  },\r\n}));\r\n\r\nconst AddComment = ({postID}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [newComment, setNewComment] = useState({\r\n    description: \"\",\r\n  });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addComment(postID,newComment));\r\n    setNewComment({\r\n      description: \"\",\r\n    });\r\n    dispatch(getComment(postID))\r\n  };\r\n  return (\r\n    <div style={{display:'flex',flexDirecton:'row',marginBottom:'5%'}}>\r\n      <form  style={{ marginLeft:'10%',width: \"90%\" ,display:'flex',flexDirecton:'row',justifyContent:'center'}} onSubmit={handleSubmit}>\r\n                <TextareaAutosize aria-label=\"Post description\"\r\n                    placeholder=\"Post Description\" value={newComment.description}\r\n                    style={{ height: \"100px\", width: \"80%\", boxShadow: \"5px 5px grey\",display: 'inline-block' }}\r\n                    onChange={(e) => setNewComment({ ...newComment, description: e.target.value })}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    style={{display:'inline-block' }}\r\n                >\r\n                    Add Comment\r\n                </Button> \r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './postDetails.css'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AddPost from \"./AddPost\";\r\nimport Compressor from 'compressorjs'\r\nimport { Button, makeStyles, TextareaAutosize, TextField } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router\";\r\nimport { getComment,updateComment ,deletecomment} from \"../redux/actions/commentActions\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n  });\r\nconst CommentPost = ({postid,comment}) => {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n  \r\n    const auth = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const [edit, setEdit] = useState(true)\r\n\r\n  const [newComment, setNewComment] = useState({\r\n    description:''\r\n})\r\nconst startedit =()=>{\r\n  setEdit(false)\r\n  setNewComment({\r\n    ...newComment,\r\n    description:comment.description\r\n})}\r\nconst handleSubmit =(e)=>{\r\n    e.preventDefault()\r\n    dispatch(updateComment(comment._id,newComment))\r\n    dispatch(getComment(comment.post))\r\n\r\n    setNewComment({...newComment,\r\n        description:''\r\n    })\r\n    setEdit(true)\r\n}\r\n\r\n  const deletecmnt = () => {\r\n\r\n    dispatch(deletecomment(comment._id))\r\n    dispatch(getComment(comment.post))\r\n    \r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container mt-1\" style={{ width: \"110%\", border: \"\", borderRadius: \"12px\" }}>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              {edit ? (\r\n                <article class=\"blog-card \">\r\n                  <div class=\"blog-card__info\" style={{ borderRadius: \"10px\" }}>\r\n                    <p style={{ display: \"flex\", contentDirection: \"row\" }}>\r\n                      <Avatar className={classes.small} src={comment.owner.imag || comment.owner.image.url || \"/images/default.jpg\"}/>\r\n                      <div style={{ marginLeft: \"2%\" }}>\r\n                        \r\n                          \r\n                          {comment.owner.firstname} {comment.owner.lastname} <br />\r\n                          Posted at :\r\n                          {comment.createdAt.replace(\"T\", \" \").split(\":\")[0] +\":\" +comment.createdAt.replace(\"T\", \" \").split(\":\")[1]}\r\n                        \r\n                      </div>\r\n                    </p>\r\n                    <div style={{ overflow:'auto' ,wordWrap: 'break-word'}}>\r\n                      \r\n\r\n                      {comment.description}\r\n                      \r\n                    </div>\r\n\r\n                    \r\n                    {auth.isAuth &&\r\n                      (auth.user._id == comment.owner._id ? (\r\n                        <>\r\n                          <Button  onClick={()=>{ dispatch(deletecomment(comment._id)); dispatch(getComment(comment.post))}} style={{backgroundColor: \"#DC143C\",color: \"white\"}}> <DeleteForeverIcon /></Button> \r\n                            <Button onClick={() => startedit()} style={{ backgroundColor: \"lime\", color: \"white\" }}> Edit </Button>\r\n                        </>\r\n                      ) : null)}\r\n                  </div>\r\n                </article>\r\n              ) : (\r\n                <div className={classes.root}>\r\n                  <form  style={{ marginLeft: \"-10%\", width: \"110%\" }} onSubmit={handleSubmit}>\r\n\r\n                    <TextareaAutosize value={newComment.description} style={{ height: \"100px\",width: \"100%\", boxShadow: \"5px 5px grey\"}} onChange={(e) => setNewComment({ ...newComment, description: e.target.value })} />\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button} >\r\n                      Update Comment\r\n                    </Button>\r\n                  </form>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CommentPost\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getComment } from '../redux/actions/commentActions'\r\nimport CommentPost from './CommentPost'\r\n\r\n\r\nconst CommentList = ({postId}) => {\r\n    const commentList = useSelector(state => state.comments.commentList)\r\n    const auth = useSelector(state => state.auth)\r\n    const count = useSelector(state => state.posts.count)\r\n    const dispatch = useDispatch()\r\n    const postid ={postId}\r\n    console.log(postid)\r\n    useEffect(() => {\r\n        dispatch(getComment(postId))\r\n    }, [])\r\n\r\n    \r\n    return (\r\n        <div style={{backgroundColor:'lightgrey',marginTop:'-10%',paddingTop:'15%'}}>\r\n            \r\n            {commentList.length == 0 ? null  : commentList.length && commentList.map((comment, index) => <CommentPost  key={index} postid={postid} comment={comment}></CommentPost>).reverse()}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentList\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './postDetails.css'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletepost, getPost, UpdatePost } from \"../redux/actions/postActions\";\r\nimport AddPost from \"./AddPost\";\r\nimport Compressor from 'compressorjs'\r\nimport { Button, makeStyles, TextareaAutosize, TextField } from \"@material-ui/core\"\r\nimport { useHistory } from \"react-router\";\r\nimport './detail.css'\r\nimport AddComment from './AddComment'\r\nimport CommentList from './CommentList';\r\nimport { getComment } from '../redux/actions/commentActions';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 0,\r\n    },\r\n    title: {\r\n         flexGrow: 1,\r\n         textAlign:'right',\r\n       },\r\n    menu:{\r\n      flexGrow: 1,\r\n      textAlign:'left',\r\n    },\r\n    \r\n  }));\r\n  \r\n\r\n\r\nconst PostDetail = ({match}) => {\r\n    const classes = useStyles();\r\n    const postList = useSelector(state => state.posts.postList)\r\n\r\n    const post= postList.find((a)=>a._id == match.params._id) \r\n\r\n\r\n  const [selectedImage, setSelectedImage] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  const auth = useSelector(state => state.auth)\r\n  const dispatch = useDispatch()\r\n  const [edit, setEdit] = useState(true)\r\n  const [limit, setLimit] = useState(5)\r\n  const [selectedImage_name, setSelectedImage_name] = useState(\"\")\r\n   useEffect(() => {\r\n    dispatch(getComment(post._id))\r\n}, [])\r\n  const deletecar = (e,p) =>{\r\n \r\n        \r\n    dispatch(deletepost(post._id))\r\n    history.puch('./posts')\r\n    \r\n    dispatch(getPost(p, limit))\r\n    \r\n  }\r\n  \r\n\r\n\r\n\r\n  const [newPost, setNewPost] = useState({\r\n      title:'',\r\n      description:'',\r\n  })\r\n  const startedit =()=>{\r\n    setEdit(false)\r\n    setNewPost({\r\n      title:post.title,\r\n      description:post.description\r\n  })}\r\n  const handleImageChange = (e) => {\r\n      if (e.target.files.length) {\r\n          const myImage = e.target.files[0]\r\n          const name_i=e.target.files[0].name\r\n            console.log(name_i)\r\n            setSelectedImage_name(e.target.files[0].name)\r\n          new Compressor(myImage, {\r\n              quality: 0.8,\r\n              success(result) {\r\n                  const reader = new FileReader()\r\n                  reader.readAsDataURL(result)\r\n                  reader.onloadend = () => {\r\n                      setSelectedImage(reader.result)\r\n                      setNewPost({ ...newPost,image: reader.result })\r\n                  }\r\n\r\n              }\r\n          })\r\n      }\r\n  }\r\n  const handleSubmit =(e,p)=>{\r\n      e.preventDefault()\r\n      dispatch(UpdatePost(post._id,newPost))\r\n      dispatch(getPost(p, limit))\r\n\r\n      setNewPost({\r\n          title:'',\r\n          description:'',\r\n          image:''\r\n      })\r\n      setEdit(true)\r\n  }\r\n\r\n  return (\r\n    // <div style={{marginTop:'200px'}}>\r\n    //   <div className='container mt-5' style={{width:'40%',marginTop:'200px'}} >\r\n    //     <div class=\"row\">\r\n    //       <div class=\"col-12\">\r\n    //         <article class=\"blog-card\">\r\n              \r\n    //           <div class=\"blog-card__info\">\r\n    //             <h5>HARVICK GETS WHAT HE NEEDS, JOHNSON AMONG THOSE</h5>\r\n    //             <p style={{display:'flex',contentDirection:'row'}}>\r\n               \r\n    //                 <Avatar alt=\"Remy Sharp\" src='./' className={classes.small} />\r\n    //                 <div>\r\n\r\n    //                 <i class=\"fa fa-pencil-square-o\"></i> Tony Jahson\r\n                     \r\n    //                 <br />\r\n                    \r\n    //                 <i class=\"fa fa-comments-o\"></i> 150 \r\n    //                 <i class=\"fa fa-comments-o\"></i> 150\r\n    //                 </div>\r\n                    \r\n                  \r\n    //             </p>\r\n    //             <p>\r\n    //               Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n    //               Doloremque vero libero voluptatibus earum? Alias dignissimos\r\n    //               quo cum, nulla esse facere atque, blanditiis doloribus at sunt\r\n    //               quas, repellendus vel? Et, hic!\r\n    //             </p>\r\n    //             <a href=\"#\" class=\"btn btn--with-icon\">\r\n    //               <i class=\"btn-icon fa fa-long-arrow-right\"></i>READ MORE\r\n    //             </a>\r\n    //           </div>\r\n    //         </article>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    //   <section class=\"detail-page\">\r\n    //     <div class=\"container mt-5\"></div>\r\n    //   </section>\r\n    // </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div style={{marginTop:'-10%',paddingTop:'15%',overflow:'auto',background:'lightgray',minHeight:800}}>\r\n      <div className='container mt-1' style={{ width: \"40%\", border:'',borderRadius: '12px',minHeight:'100%' }}>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\" >\r\n            {\r\n              edit ?\r\n            \r\n            <article class=\"blog-card \" >\r\n              \r\n              <div class=\"blog-card__info\" style={{ borderRadius: '10px' }}>\r\n                <h4>{post.title}</h4>\r\n                <p style={{ display: \"flex\", contentDirection: \"row\" }}>\r\n                  \r\n                  \r\n                  <Avatar  className={classes.small}  src={post.owner.imag || post.owner.image.url || '/images/default.jpg'} />\r\n                  <div style={{marginLeft:'2%'}}>\r\n                    <p> {post.owner.firstname} {post.owner.lastname} <br />\r\n                        Posted at :{post.createdAt.replace('T',' ').split(':')[0]+':'+post.createdAt.replace('T',' ').split(':')[1]}\r\n                    </p>\r\n\r\n                  </div>\r\n                </p>\r\n                <div style={{fontSize:20}}>\r\n                {post.description}\r\n                </div>\r\n                {post.image ?\r\n                            \r\n                            <img name=\"preview\" style={{ display: 'block',\r\n                              marginLeft: 'auto',\r\n                              marginRight: 'auto',\r\n                              width: '50%'}} src={post.image.url || post.image} ></img>\r\n                            : null\r\n                        }<br />            \r\n                    \r\n                    {auth.isAuth &&(\r\n                    auth.user._id == post.owner._id ? \r\n                    <><Button onClick={()=>deletecar()} style={{backgroundColor:'#DC143C',color:'white',marginTop:'5%'}}><DeleteForeverIcon /></Button> <Button onClick={()=>startedit()}  style={{backgroundColor:'lime',color:'white',marginTop:'5%'}}>Edit</Button></>\r\n                    : null\r\n                    )}\r\n              </div>\r\n            </article>\r\n                    : <div className={classes.root}>\r\n                    <form  style={{ marginLeft:'-10%',width: \"110%\" }} onSubmit={handleSubmit}>\r\n                        {/* a essayer sans selectedImage loula */}\r\n                        {/* {selectedImage && <img name=\"preview\" style={{ height: \"100px\" }} src={selectedImage || \"./images/default.jpg\"} alt=\"preview\"></img>} */}\r\n                        {post.image ?\r\n                            \r\n                            <img name=\"preview\" style={{ height: \"100px\" }} src={selectedImage =='' ? \r\n                            post.image.url || post.image || '':selectedImage} ></img>\r\n                            : null\r\n                        }<br />\r\n                        {/* <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            multiple\r\n                            onChange={handleImageChange}\r\n                            \r\n                        /> */}\r\n                        <input\r\n                                    accept=\"image/*\"\r\n                                    className={classes.input}\r\n                                    id=\"contained-button-file\"\r\n                                    type=\"file\"\r\n                                    onChange={handleImageChange}\r\n                                    multiple\r\n                                    \r\n                                    \r\n                                    />\r\n                        \r\n                        {/* <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </label> */}\r\n        \r\n                        <TextareaAutosize aria-label=\"Post title\"\r\n                            placeholder=\"Post title\" value={newPost.title}\r\n                            style={{ height: \"40px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                            onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\r\n                            />\r\n        \r\n                        <TextareaAutosize aria-label=\"Post description\"\r\n                            placeholder=\"Post Description\" value={newPost.description}\r\n                            style={{ height: \"100px\", width: \"100%\", boxShadow: \"5px 5px grey\" }}\r\n                            onChange={(e) => setNewPost({ ...newPost, description: e.target.value })}\r\n                            />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                          Update Post\r\n                        </Button>            \r\n                    </form>\r\n                </div>}\r\n                <div style={{textAlign:'center',fontSize:40,fontWeight:'bolder' }}>\r\n                  Comments\r\n                \r\n                </div>\r\n          </div>\r\n                <AddComment postID={post._id} ></AddComment>\r\n                <CommentList  postId={post._id} ></CommentList>\r\n        </div>\r\n      </div>\r\n            \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","import './App.css';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport LoginPage from './pages/LoginPage';\nimport Register from './pages/Register';\nimport Profile from './pages/Profile';\nimport PrivateRoute from './privateRoutes/PrivateRoute'\nimport LoadingComponent from './components/LoadingComponent';\nimport Navbar from './components/Navbar'\nimport Home from './pages/Home'\nimport AddCardealer from './components/AddCardealer';\nimport CarDealerList from './components/CarDealerList';\n\nimport CardealerDetails from './components/CardealerDetails';\nimport UpdateCardealer from './components/UpdateCardealer';\nimport AdminRoute from './privateRoutes/AdminRoute';\nimport PostDetail from './components/PostDetail';\nimport PostList from './components/PostList';\n\nfunction App() {\n  return (\n    < >\n      <BrowserRouter>\n        <Navbar></Navbar>\n        <LoadingComponent>  </LoadingComponent>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            \n            <Route exact path='/posts' component={PostList} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route exact path='/addcardealer' component={AddCardealer}/>\n            <Route exact path=\"/register\" component= {Register} />\n            <Route path=\"/cardealerlist\" component= {CarDealerList} />\n            {/* <Route exact path=\"/details\" component= {PostDetail} /> */}\n            <PrivateRoute path='/profile' component ={Profile}></PrivateRoute>\n            {/* <AdminRoute path=\"/profile\" component ={Profile}></AdminRoute> */}\n            <Route exact  path='/cardealer/:_id' render={(props)=><CardealerDetails {...props}  ></CardealerDetails>}></Route>\n            <Route exact  path='/posts/:_id' render={(props)=><PostDetail {...props}  ></PostDetail>}></Route>\n\n            <Route exact  path='/updatecardealer/:_id' render={(props)=><UpdateCardealer {...props}  ></UpdateCardealer>}></Route>\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CLEAR_ERROR, SET_ERROR, START_LOADING, STOP_LOADING } from \"../actions/appStateTypes\"\r\n\r\nconst initState = {\r\n    postList:[],\r\n    errors: null,\r\n    isLoading: {\r\n        state: false,\r\n    },\r\n}\r\n\r\nconst appStateReducer = (state = initState, { type, payload }) => {\r\n    switch (type) {\r\n        case START_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: { state: true, ref: payload }\r\n            }\r\n        case STOP_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: { state: false }\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: payload\r\n            }\r\n        case CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: null,\r\n                postList:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default appStateReducer","import { GET_PROFILE_SUCCESS,LOGIN_SUCCESS, LOGOUT, REGISTER_SUCCESS } from \"../actions/authTypes\"\r\n\r\nimport {GET_MY_POST_SUCCESS} from \"../actions/postTypes\"\r\nconst initState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuth: Boolean(localStorage.getItem('isAuth')),\r\n    user: JSON.parse(localStorage.getItem('user'))\r\n}\r\n\r\n\r\nconst authReducer = (state=initState,{type,payload}) => {\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            localStorage.setItem('isAuth', true)\r\n            return{\r\n                ...state,\r\n                isAuth:true,\r\n                token:payload.token\r\n            }\r\n        case GET_PROFILE_SUCCESS:\r\n            localStorage.setItem('user',JSON.stringify(payload))\r\n            return {\r\n                ...state,\r\n                user:payload\r\n            }\r\n        case LOGOUT: \r\n            localStorage.clear()\r\n            return{\r\n                ...state,\r\n                user:null,\r\n                isAuth:false,\r\n                token:null\r\n            }\r\n        \r\n        case GET_MY_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                errors:null,\r\n                user:{\r\n                    ...state.user,\r\n                    posts:payload\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\n export default authReducer","const { GET_POST_SUCCESS, GET_POST_COUNT_SUCCESS, GET_MY_POST_SUCCESS} = require(\"../actions/postTypes\");\r\n\r\n\r\nconst initState = {\r\n    postList: [],\r\n    errors: null,\r\n    isLoading: false,\r\n    count: 0\r\n}\r\n\r\n\r\nconst postReducer =( state=initState, {type,payload})=>{\r\n    switch (type) {\r\n        case GET_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                postList: payload.posts\r\n            }\r\n            \r\n        case GET_POST_COUNT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                count: payload.count\r\n            }\r\n        case GET_MY_POST_SUCCESS:\r\n            return{\r\n                ...state,\r\n                postList:payload.posts\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postReducer;\r\n","// const { GET_POST_SUCCESS, GET_POST_FAIL, GET_POST_REQUEST, GET_POST_COUNT_SUCCESS} = require(\"../actions/postTypes\");\r\n\r\nimport { GET_CARDEALER_COUNT_SUCCESS, GET_CARDEALER_SUCCESS } from \"../actions/carDealerTypes\"\r\n\r\n\r\nconst initState = {\r\n    cardealerList: [],\r\n    errors: null,\r\n    isLoading: false,\r\n    count: 0\r\n}\r\n\r\n\r\nconst cardealerReducer =( state=initState, {type,payload})=>{\r\n    switch (type) {\r\n        case GET_CARDEALER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                cardealerList: payload.CarDealers,\r\n            }\r\n        \r\n        case GET_CARDEALER_COUNT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                count: payload.count\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cardealerReducer\r\n","import { GET_COMMENT_COUNT_SUCCESS, GET_COMMENT_SUCCESS } from \"../actions/commentTypes\"\r\n\r\n\r\nconst initState = {\r\n    commentList: [],\r\n    errors: null,\r\n    isLoading: false,\r\n    count: 0\r\n}\r\n\r\n\r\nconst commentReducer =( state=initState, {type,payload})=>{\r\n    switch (type) {\r\n        case GET_COMMENT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                commentList: payload.comments,\r\n            }\r\n        case GET_COMMENT_COUNT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                count: payload.count\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default commentReducer","import { combineReducers } from \"redux\";\r\nimport appStateReducer from \"./appStateReducer\";\r\nimport authReducer from './authReducer'; \r\nimport postReducer from './postReducer';\r\nimport cardealerReducer from './cardealerReducer'\r\nimport commentReducer from \"./commentReducer\";\r\n\r\nexport default combineReducers({\r\n    auth:authReducer,\r\n    posts:postReducer,\r\n    cardealers:cardealerReducer,\r\n    appState: appStateReducer,\r\n    comments:commentReducer\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk)))\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const ADD_POST_REQUEST=\"ADD_POST_REQUEST\"\r\nexport const ADD_POST_SUCCESS=\"ADD_POST_SUCCESS\"\r\nexport const ADD_POST_FAIL=\"ADD_POST_FAIL\"\r\n\r\n\r\nexport const GET_POST_REQUEST=\"GET_POST_REQUEST\"\r\nexport const GET_POST_SUCCESS=\"GET_POST_SUCCESS\"\r\nexport const GET_POST_FAIL=\"GET_POST_FAIL\"\r\n\r\nexport const GET_MY_POST_REQUEST=\"GET_MY_POST_REQUEST\"\r\nexport const GET_MY_POST_SUCCESS=\"GET_MY_POST_SUCCESS\"\r\nexport const GET_MY_POST_FAIL=\"GET_MY_POST_FAIL\"\r\n\r\nexport const GET_POST_COUNT_REQUEST = \"GET_POST_COUNT_REQUEST\"\r\nexport const GET_POST_COUNT_SUCCESS = \"GET_POST_COUNT_SUCCESS\"\r\nexport const GET_POST_COUNT_FAIL = \"GET_POST_COUNT_FAIL\"\r\n\r\nexport const UPDATE_POST_REQUEST = \"UPDATE_POST_REQUEST\"\r\nexport const UPDATE_POST_SUCCESS = \"UPDATE_POST_SUCCESS\"\r\nexport const UPDATE_POST_FAIL = \"UPDATE_POST_FAIL\"\r\n\r\n\r\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\"\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\"","export const START_LOADING = \"START_LOADING\"\r\nexport const STOP_LOADING = \"STOP_LOADING\"\r\n\r\nexport const SET_ERROR = \"SET_ERROR\"\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\"\r\n"],"sourceRoot":""}